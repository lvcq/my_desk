name: Elixir deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test elixir code
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - uses: ./.github/actions/test
  
  build_docker_image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: test
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-docker-image
        with:
          docker_repository: ${{ secrets.DOCKER_REPOSITORY }}
          docker_username: ${{ secrets.DOCKER_USERNAE }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}

  
  deploy: 
    name: Restart server
    needs: build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >> ~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.HOST_USERNAME }}
          SSH_KEY: ${{ secrets.HOST_SSH_KEY }}
          SSH_HOST: ${{ secrets.HOST }}
      - name: Restart my desk server
        run: ssh staging 'cd /root/docker/my_desk && docker-compose stop my-desk-server && docker pull ${{secrets.DOCKER_REPOSITORY}}:latest && docker-compose up -d  my-desk-server'



